class Solution {
    public int first(int[] nums, int target){
        int ans = -1;
        int st = 0;
        int n = nums.length;
        int end = n-1;
        while(st <= end){
            int mid = st+(end-st)/2;
            if(nums[mid] == target){
                ans = mid;
                end = mid-1;
            }
            else if(nums[mid] > target){
                end = mid-1;
            }
            else{
                st = mid+1;
            }
        }
        return ans;
    }

    public int last(int[] nums, int target){
        int ans = -1;
        int st = 0;
        int n =  nums.length;
        int end = n-1;
        while(st <= end){
            int mid = st+(end-st)/2;
            if(nums[mid] == target){
                ans = mid;
                st = mid+1;
            }
            else if(nums[mid] > target){
                end = mid-1;
            }
            else{
                st = mid+1;
            }
        }
        return ans;
    }
    public int[] searchRange(int[] nums, int target) {
        
        int a1 = first(nums,target);
        int a2 = last(nums,target);
        return new int[]{a1,a2};
    }
}
