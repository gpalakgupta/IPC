class Solution {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        return nge(nums2,nums1);
    }
    public int[] nge(int[] nums2, int[] nums1){
        int n = nums2.length;
        int[] ans = new int[n];
        Stack<Integer> st = new Stack<>();
        for(int i = 0; i<n; i++){
            while(!st.isEmpty() && nums2[i] > nums2[st.peek()]){
                ans[st.pop()] = nums2[i];
            }
            st.push(i);
        }
        while(!st.isEmpty()){
            ans[st.pop()] = -1;
        }
        HashMap<Integer,Integer> mp = new HashMap<>();
        for(int i = 0; i<n; i++){
            mp.put(nums2[i],ans[i]);
        }
        int[] res = new int[nums1.length];
        for(int i = 0; i<nums1.length; i++){
            if(mp.containsKey(nums1[i])){
                res[i] = mp.get(nums1[i]);
            }
        }
        return res;
    }
}
